{"version":3,"sources":["components/navbar.component.js","components/shortplanlist.component.js","components/longplanlist.component.js","components/addplans.component.js","components/todolist.component.js","components/editplans.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","data-toggle","data-target","id","to","Plan","props","useState","plans","details","setDetails","progress","setProgress","deadline","setDeadline","open","setOpen","title","plandate","substring","startdate","_id","onSubmit","e","updateData","preventDefault","axios","put","then","res","console","log","catch","err","cols","rows","onChange","target","value","type","selected","Date","Plans","planlist","setPlanlist","filterbyopen","setFilterbyopen","useEffect","get","data","reverse","filter","d","map","window","alert","location","AddPlans","username","setUsername","setType","setStartdate","duration","setDuration","setTitle","post","required","min","Todo","todos","Todos","todolist","setTodolist","EditPlans","App","path","exact","component","ShortPlanList","LongPlanList","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.422df04c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport 'jquery/dist/jquery.min.js';\r\n\r\n\r\nexport default function Navbar (){\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <a href=\"/plan-master/\" className=\"navbar-brand\">tradecoder</a>\r\n                </div>\r\n                <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-menu\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div id=\"main-menu\" className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\"><Link to = \"/plan-master/\" className=\"nav-link\">Set Plans</Link></li>\r\n                        <li className=\"nav-item\"><Link to = \"/plan-master/shortplan/\" className=\"nav-link\">Short Term Plan</Link></li>\r\n                        <li className=\"nav-item\"><Link to =\"/plan-master/longplan/\" className=\"nav-link\">Long Term Plan</Link></li>\r\n                        <li className=\"nav-item\"><Link to =\"/plan-master/todos/\" className=\"nav-link\">Todos</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport 'jquery/dist/jquery';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\nconst Plan = props=>{\r\n    const [details, setDetails] = useState(props.plans.details);\r\n    const [progress, setProgress] = useState(props.plans.progress);\r\n    const [deadline, setDeadline] = useState(props.plans.deadline);\r\n    const [open, setOpen] = useState(props.plans.open);   \r\n    function onChangeDetails(e){\r\n        setDetails(e.target.value);\r\n    }\r\n    function onChangeProgress(e){\r\n        setProgress(e.target.value)\r\n    }\r\n    function onChangeDeadline(e){\r\n        setDeadline(e);\r\n    }\r\n    function onChangeOpen(e){\r\n        setOpen(e.target.value==\"Closed\"?false:true);\r\n    }\r\n   \r\n\r\n    function onSubmitEditPlan(e){\r\n        const updateData = {\r\n            details, progress, deadline, open\r\n        }\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:5000/shortplan/update/${props.plans._id}`, updateData)\r\n        .then(res=>console.log(res))\r\n        .catch(err=>console.log(err));\r\n    };\r\n    return (\r\n                        \r\n        <div className=\"shadow p-3\">                 \r\n\r\n            <h4 className=\"text-primary\">{props.plans.title}</h4>\r\n            <p>{props.plans.details}</p>\r\n            <p>Progress: {props.plans.progress}</p>\r\n            <p>Open date: {props.plans.plandate?props.plans.plandate.substring(0,10):props.plans.plandate}, \r\n            Start Date: {props.plans.startdate?props.plans.startdate.substring(0,10):props.plans.startdate},\r\n            Deadline: {props.plans.deadline?props.plans.deadline.substring(0,10):props.plans.deadline},              \r\n            Status: {props.plans.open==true?\"Open\":\"Closed\"}\r\n            </p>\r\n            <button className=\"btn btn-primary\" data-toggle=\"collapse\" data-target={`#planid${props.plans._id}`}>Edit</button>\r\n            <div className=\"collapse\" id={`planid${props.plans._id}`}>\r\n                <form onSubmit={onSubmitEditPlan}>\r\n                    <div className=\"form-group\">\r\n                        <label>Plan details: </label>\r\n                        <textarea cols=\"50\" rows=\"5\" className=\"form-control\" onChange={onChangeDetails}>{details}</textarea>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                    <div className=\"form-group\">\r\n                        <label>Progress: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress} onChange={onChangeProgress}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline: </label><br/>\r\n                        <DatePicker selected={new Date(deadline)} onChange={onChangeDeadline} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Open/Close: </label><br/>\r\n                        <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                            <option>Open</option>\r\n                            <option>Closed</option>\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default function Plans(){\r\nconst [planlist, setPlanlist] =  useState([]);\r\nconst [filterbyopen, setFilterbyopen] = useState(true);\r\n\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/shortplan')\r\n    .then(res=>{\r\n        setPlanlist(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\nfunction onChangeFilterByOpen(e){\r\n    setFilterbyopen(filterbyopen == true?false:true);\r\n}\r\n\r\nreturn (\r\n<div className=\"container\">\r\n    <div>\r\n        <select selected={filterbyopen} onChange={onChangeFilterByOpen} className=\"form-control\">\r\n            <option>Open plans</option>\r\n            <option>Closed plans</option>\r\n        </select>\r\n    </div>\r\n    <div>\r\n    {planlist.filter(d=>d.open==filterbyopen).map(data=>{\r\n    return <Plan plans={data} />\r\n})} </div>\r\n</div>\r\n\r\n);\r\n\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport 'jquery/dist/jquery';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\nconst Plan = props=>{\r\n    const [details, setDetails] = useState(props.plans.details);\r\n    const [progress, setProgress] = useState(props.plans.progress);\r\n    const [deadline, setDeadline] = useState(props.plans.deadline);\r\n    const [open, setOpen] = useState(props.plans.open);   \r\n    function onChangeDetails(e){\r\n        setDetails(e.target.value);\r\n    }\r\n    function onChangeProgress(e){\r\n        setProgress(e.target.value)\r\n    }\r\n    function onChangeDeadline(e){\r\n        setDeadline(e);\r\n    }\r\n    function onChangeOpen(e){\r\n        setOpen(e.target.value==\"Closed\"?false:true);\r\n    }\r\n   \r\n\r\n    function onSubmitEditPlan(e){\r\n        const updateData = {\r\n            details, progress, deadline, open\r\n        }\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:5000/longplan/update/${props.plans._id}`, updateData)\r\n        .then(res=>{window.alert(res.data); window.location=('/plan-master/longplan')})\r\n        .catch(err=>console.log(err));\r\n    };\r\n    return (\r\n                        \r\n        <div className=\"shadow p-3\">                 \r\n\r\n            <h4 className=\"text-primary\">{props.plans.title}</h4>\r\n            <p>{props.plans.details}</p>\r\n            <p>Progress: {props.plans.progress}</p>\r\n            <p>Open date: {props.plans.plandate?props.plans.plandate.substring(0,10):props.plans.plandate}, \r\n            Start Date: {props.plans.startdate?props.plans.startdate.substring(0,10):props.plans.startdate},\r\n            Deadline: {props.plans.deadline?props.plans.deadline.substring(0,10):props.plans.deadline},              \r\n            Status: {props.plans.open==true?\"Open\":\"Closed\"}\r\n            </p>\r\n            <button className=\"btn btn-primary\" data-toggle=\"collapse\" data-target={`#planid${props.plans._id}`}>Edit</button>\r\n            <div className=\"collapse\" id={`planid${props.plans._id}`}>\r\n                <form onSubmit={onSubmitEditPlan}>\r\n                    <div className=\"form-group\">\r\n                        <label>Plan details: </label>\r\n                        <textarea cols=\"50\" rows=\"5\" className=\"form-control\" onChange={onChangeDetails}>{details}</textarea>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                    <div className=\"form-group\">\r\n                        <label>Progress: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress} onChange={onChangeProgress}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline: </label><br/>\r\n                        <DatePicker selected={new Date(deadline)} onChange={onChangeDeadline} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Open/Close: </label><br/>\r\n                        <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                            <option>Open</option>\r\n                            <option>Closed</option>\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n  \r\n}\r\n\r\nexport default function Plans(){\r\nconst [planlist, setPlanlist] =  useState([]);\r\nconst [filterbyopen, setFilterbyopen] = useState(true);\r\n\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/longplan')\r\n    .then(res=>{\r\n        setPlanlist(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\nfunction onChangeFilterByOpen(e){\r\n    setFilterbyopen(filterbyopen == true?false:true);\r\n}\r\n\r\nreturn (\r\n<div className=\"container\">\r\n    <div>\r\n        <select selected={filterbyopen} onChange={onChangeFilterByOpen} className=\"form-control\">\r\n            <option>Open plans</option>\r\n            <option>Closed plans</option>\r\n        </select>\r\n    </div>\r\n    <div>\r\n    {planlist.filter(d=>d.open==filterbyopen).map(data=>{\r\n    return <Plan plans={data} />\r\n})} </div>\r\n</div>\r\n\r\n);\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function AddPlans(){\r\n\r\n    const [username, setUsername] =  useState(\"mamun\");\r\n    const [type, setType] =  useState(\"shortplan\");\r\n    const [startdate, setStartdate]= useState(new Date());\r\n    const [deadline, setDeadline] = useState(new Date());\r\n    const [open, setOpen] = useState(true);\r\n    const [duration, setDuration] = useState(1)\r\n    const [title, setTitle]= useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [progress, setProgress]= useState(\"\");\r\n\r\n    function onChangeUsername(e){\r\n        setUsername(e.target.value);\r\n    };\r\n    function onChangeType(e){\r\n        setType(e.target.value);\r\n    };\r\n\r\n    function onChangeStartdate(e){\r\n        setStartdate(e>=new Date()?e:new Date());\r\n        setDeadline(e);     \r\n    };\r\n    function onChangeDeadline(e){\r\n        setDeadline(e>= startdate?e:startdate);        \r\n    }\r\n    function onChangeOpen(e){\r\n        setOpen(e.target.value)\r\n    };\r\n    function onChangeDuration(e){\r\n        setDuration(e.target.value);\r\n    }\r\n    function onChangeTitle(e){\r\n        setTitle(e.target.value)\r\n    };\r\n    function onChangeDetails(e){\r\n        setDetails(e.target.value);\r\n    };\r\n    function onChangeProgress(e){\r\n        setProgress(e.target.value)\r\n    };\r\n    function onSubmitPlan(e){\r\n        e.preventDefault();\r\n        const plans={\r\n            username, type, startdate, duration, deadline, open, title, details, progress\r\n        }\r\n        axios.post(`http://localhost:5000/${type}/add`, plans)\r\n        .then(res=>{\r\n            \r\n            window.location=(`/plan-master/${type}`)})\r\n        .catch(err=>console.log(err));\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <form onSubmit={onSubmitPlan}>\r\n                <div className=\"d-flex flex-wrap justify-content-between\">\r\n                        <div className=\"form-group\">\r\n                            <label>Username:</label>\r\n                            <input type=\"text\" className=\"form-control\" value={username} onChange={onChangeUsername} required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Plan type:</label>\r\n                            <select selected={type} onChange={onChangeType} className=\"form-control\" required>\r\n                                <option>shortplan</option>\r\n                                <option>longplan</option>\r\n                                <option>todos</option>\r\n                            </select>                           \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Plan duration:</label>\r\n                            <input type=\"number\" min=\"0\" className=\"form-control\" value={duration} onChange={onChangeDuration} required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Start date:</label><br/>\r\n                            <DatePicker selected ={startdate} onChange={onChangeStartdate} className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Deadline:</label><br/>\r\n                            <DatePicker selected={deadline} onChange={onChangeDeadline} className=\"form-control\" required/>                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Open:</label>\r\n                            <select selected={open} onChange={onChangeOpen} className=\"form-control\" required>\r\n                                <option>true</option>\r\n                                <option>false</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label>Plan title:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={title} onChange={onChangeTitle} required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Plan details:</label>\r\n                        <textarea className=\"form-control\" rows=\"5\" cols=\"50\" value={details} onChange={onChangeDetails} required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Progress:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress} onChange={onChangeProgress} required/>\r\n                    </div>                  \r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add plan</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport 'jquery/dist/jquery';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\n\r\nconst Todo = props=>{\r\n    const [details, setDetails] = useState(props.todos.details);\r\n    const [progress, setProgress] = useState(props.todos.progress);\r\n    const [deadline, setDeadline] = useState(props.todos.deadline);\r\n    const [open, setOpen] = useState(props.todos.open);   \r\n    function onChangeDetails(e){\r\n        setDetails(e.target.value);\r\n    }\r\n    function onChangeProgress(e){\r\n        setProgress(e.target.value)\r\n    }\r\n    function onChangeDeadline(e){\r\n        setDeadline(e);\r\n    }\r\n    function onChangeOpen(e){\r\n        setOpen(e.target.value==\"Closed\"?false:true);\r\n    }\r\n   \r\n\r\n    function onSubmitEditTodo(e){\r\n        const updateData = {\r\n            details, progress, deadline, open\r\n        }\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:5000/todos/update/${props.todos._id}`, updateData)\r\n        .then(res=>console.log(res))\r\n        .catch(err=>console.log(err));\r\n    };\r\n    return (\r\n                        \r\n        <div className=\"shadow p-3\">                 \r\n\r\n            <h4 className=\"text-primary\">{props.todos.title}</h4>\r\n            <p>{props.todos.details}</p>\r\n            <p>Progress: {props.todos.progress}</p>\r\n            <p>Open date: {props.todos.plandate?props.todos.plandate.substring(0,10):props.todos.plandate}, \r\n            Start Date: {props.todos.startdate?props.todos.startdate.substring(0,10):props.todos.startdate},\r\n            Deadline: {props.todos.deadline?props.todos.deadline.substring(0,10):props.todos.deadline},              \r\n            Status: {props.todos.open==true?\"Open\":\"Closed\"}\r\n            </p>\r\n            <button className=\"btn btn-primary\" data-toggle=\"collapse\" data-target={`#planid${props.todos._id}`}>Edit</button>\r\n            <div className=\"collapse\" id={`planid${props.todos._id}`}>\r\n                <form onSubmit={onSubmitEditTodo}>\r\n                    <div className=\"form-group\">\r\n                        <label>Plan details: </label>\r\n                        <textarea cols=\"50\" rows=\"5\" className=\"form-control\" onChange={onChangeDetails}>{details}</textarea>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                    <div className=\"form-group\">\r\n                        <label>Progress: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress} onChange={onChangeProgress}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline: </label><br/>\r\n                        <DatePicker selected={new Date(deadline)} onChange={onChangeDeadline} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Open/Close: </label><br/>\r\n                        <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                            <option>Open</option>\r\n                            <option>Closed</option>\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n  \r\n}\r\n\r\nexport default function Todos(){\r\nconst [todolist, setTodolist] =  useState([]);\r\nconst [filterbyopen, setFilterbyopen] = useState(true);\r\n\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/todos')\r\n    .then(res=>{\r\n        setTodolist(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\nfunction onChangeFilterByOpen(e){\r\n    setFilterbyopen(filterbyopen == true?false:true);\r\n}\r\n\r\nreturn (\r\n<div className=\"container\">\r\n    <div>\r\n        <select selected={filterbyopen} onChange={onChangeFilterByOpen} className=\"form-control\">\r\n            <option>Open plans</option>\r\n            <option>Closed plans</option>\r\n        </select>\r\n    </div>\r\n    <div>\r\n    {todolist.filter(d=>d.open==filterbyopen).map(data=>{\r\n    return <Todo todos={data} />\r\n})} </div>\r\n</div>\r\n\r\n);\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n// import axios from 'axios';\r\n\r\nexport default function EditPlans(){\r\n    const [username] = useState(\"\");\r\n    const [title] = useState(\"\");\r\n    const [startdate] = useState(\"\");\r\n    const [deadline] = useState(\"\");\r\n    const [open] = useState(\"\");\r\n    const [details] = useState(\"\");\r\n    const [progress] = useState(\"\");\r\n\r\n\r\n\r\n    function onSubmitEditPlan(e){\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <h3 className=\"text-center\">Edit plans</h3>\r\n                <form onSubmit={onSubmitEditPlan}>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <p>Username: {username}</p>\r\n                        <h4>{title}</h4>\r\n                        <div className=\"form-group\">\r\n                            <label>Start Date:</label><br/>\r\n                            <DatePicker selected={startdate} className=\"form-control\"/>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label>Deadline:</label><br/>\r\n                            <DatePicker selected={deadline} className=\"form-control\"/>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label>Open/Close: </label>\r\n                            <select selected={open} className=\"form-control\"></select>     \r\n                        </div>                        \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Details:</label>\r\n                        <textarea rows=\"5\" cols=\"50\" className=\"form-control\">{details}</textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Progress:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress}/>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from './components/navbar.component.js';\r\nimport ShortPlanList from './components/shortplanlist.component.js';\r\nimport LongPlanList from './components/longplanlist.component.js';\r\nimport AddPlans from './components/addplans.component.js';\r\nimport Todos from './components/todolist.component.js';\r\nimport EditPlans from './components/editplans.component.js';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <div className=\"p-4\">\r\n        <h6 className=\"text-center\">Plan master- a roadmap for ultimate goals</h6>     \r\n      </div>\r\n      <Route path='/plan-master/' exact component={AddPlans}></Route>\r\n      <Route path=\"/plan-master/shortplan/\" component={ShortPlanList}></Route>\r\n      <Route path=\"/plan-master/longplan/\" component={LongPlanList}></Route>\r\n      <Route path=\"/plan-master/todos/\" component={Todos}></Route>\r\n      <Route path=\"/plan-master/editplan/\" component={EditPlans}></Route>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}